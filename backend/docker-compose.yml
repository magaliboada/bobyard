services:
  backend:
    build: .
    command: >
      sh -c "python manage.py migrate &&
             gunicorn --reload --bind 0.0.0.0:3000 backend.wsgi:application"
    volumes:
      - .:/app
    ports:
      - "3000:3000"
    environment:
      - DEBUG=1
      - SECRET_KEY=your-secret-key-here
      - POSTGRES_DB=bobyard
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_HOST=db
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3

  db:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=bobyard
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d bobyard"]
      interval: 5s
      timeout: 5s
      retries: 5

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
